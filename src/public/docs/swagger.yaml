openapi: 3.0.0
info:
  title: es_tileserv
  version: '1.0'
  contact:
    name: Jin IGARASHI
    url: 'https://water-gis.com'
    email: igarashi.jin@water-gis.com
  description: This is an API of simple vector tile server which is served from Elasticsearch.
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:8080'
    description: localhost
paths:
  '/api/tile/{z}/{x}/{y}.{ext}':
    parameters:
      - $ref: '#/components/parameters/zoom'
      - $ref: '#/components/parameters/x_index'
      - $ref: '#/components/parameters/y_index'
      - $ref: '#/components/parameters/ext'
    get:
      summary: Vector Tiles API for Elasticsearch
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/pbf'
      operationId: get-tile-z-x-y-.pbf
      description: This is an API for serving binary vector tiles.
      parameters:
        - $ref: '#/components/parameters/indices'
  '/api/tile/{tilesets}/{z}/{x}/{y}.{ext}':
    parameters:
      - $ref: '#/components/parameters/tilesets'
      - $ref: '#/components/parameters/zoom'
      - $ref: '#/components/parameters/x_index'
      - $ref: '#/components/parameters/y_index'
      - $ref: '#/components/parameters/ext'
    get:
      summary: Vector Tiles API from mbtiles+Elasticsearch
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/pbf'
      operationId: get-api-tile-tilesets-z-x-y-.-ext
      description: This is an API for serving binary vector tiles from base mbtiles and Elasticsearch result.
      parameters:
        - $ref: '#/components/parameters/indices'
  /healthcheck:
    get:
      summary: Healthcheck API
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
              examples:
                example:
                  value:
                    status: ok
      operationId: get-healthcheck
      description: 'Check health of server. If everything is fine, it will return ''{"status":"ok"}''.'
components:
  schemas: {}
  responses:
    pbf:
      description: return pbf binary vector tile
      content:
        application/gzip:
          schema:
            type: string
      headers:
        Content-Type:
          schema:
            type: string
          description: application/x-protobuf
        Content-Encoding:
          schema:
            type: string
          description: gzip
        Access-Control-Allow-Methods:
          schema:
            type: string
          description: GET
        Access-Control-Allow-Origin:
          schema:
            type: string
          description: '*'
  parameters:
    zoom:
      name: z
      in: path
      required: true
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 24
        example: 10
      description: Zoom level
    x_index:
      name: x
      in: path
      required: true
      schema:
        type: integer
        example: 597
        format: int32
      description: X Index
    y_index:
      name: 'y'
      in: path
      required: true
      schema:
        type: integer
        example: 517
      description: Y Index
    ext:
      name: ext
      in: path
      required: true
      schema:
        type: string
        enum:
          - pbf
        default: pbf
      description: File extension
    indices:
      name: indices
      in: query
      required: false
      schema:
        type: string
        example: '[{"name":"africa_rwanda_poi","geometry":"geometry"},{"name":"africa_rwanda_building","geometry":"geometry"}]'
      description: |
        Please specify Elasticsearch queries if you want to overlay the information on base mbtiles. 

        JSON string of array of indices for Elasticsearch. It should contain the following properties.
        - name: Required. Index for Elasticsearch
        - geometry: Option. geometry name. Default is ''geom''
        - query: Option. query for searching. Default is ''{"match_all":{}}''
    tilesets:
      name: tilesets
      in: path
      required: true
      schema:
        type: string
        example: unvt
        default: unvt
      description: 'Tileset name. Specify your filename of mbtiles. If it is "example.mbtiles", "example" will be tileset name. You can put multiple tilesets by using comma like "tileset_a,tileset_b".'
